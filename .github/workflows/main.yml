name: Build and deploy
on: [push]

jobs:
  windows-debug:
    runs-on: windows-latest
    name: Create Windows debug build
    steps:
    - name: Checkout
      uses: actions/checkout@v2.3.4

    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.0.3

    - name: Builderino
      run: |
        msbuild /p:Configuration=Debug /p:Platform=x64

    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: WindowsDebug
        path: |
            bin/
            !bin/*.html

  windows-release:
    runs-on: windows-latest
    name: Create Windows release build
    steps:
    - name: Checkout
      uses: actions/checkout@v2.3.4

    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.0.3

    - name: Builderino
      run: |
        msbuild /p:Configuration=Release /p:Platform=x64

    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: WindowsRelease
        path: |
            bin/
            !bin/*.html

  web-release:
    runs-on: ubuntu-latest
    name: Publish emscripten release build
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4

      - name: Find and define GITHUB_REF_SLUG
        uses: rlespinasse/github-slug-action@v3.x

      - name: Cache
        uses: actions/cache@v2
        with:
          # use branch name for cache invalidation (Linux-build-name-of-branch)
          key: ${{ runner.os }}-build-release-${{ env.GITHUB_REF_SLUG }}
          path: |
            ~/.cache/emsdk

      - name: Build release
        run: |
          docker run --rm \
                     -v $GITHUB_WORKSPACE:/workspace \
                     --workdir /workspace \
                     -v ~/.cache/emsdk:/emsdk/upstream/emscripten/cache/ \
                     emscripten/emsdk emmake make -j2 OPTIM=2 DEBUG=0

      - name: FrontPage 2000 release
        run: |
          mkdir -p www
          cp bin/{gaem.data,gaem.wasm,gaem.js,index.html} www
          echo "https://albertvaka.github.io/nbgf/${{ env.GITHUB_REF_SLUG }}" >> www/README.md

      - name: Deploy release
        uses: JamesIves/github-pages-deploy-action@4.1.4
        with:
          repository-name: albertvaka/albertvaka.github.io
          ssh-key: ${{ secrets.DEPLOY_KEY }}
          branch: main
          folder: www
          target-folder: nbgf/${{ env.GITHUB_REF_SLUG }}

  web-debug:
    runs-on: ubuntu-latest
    name: Publish emscripten debug build
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4

      - name: Find and define GITHUB_REF_SLUG
        uses: rlespinasse/github-slug-action@v3.x

      - name: Cache
        uses: actions/cache@v2
        with:
          # use branch name for cache invalidation (Linux-build-name-of-branch)
          key: ${{ runner.os }}-build-debug-${{ env.GITHUB_REF_SLUG }}
          path: |
            ~/.cache/emsdk

      - name: Build debug
        run: |
          docker run --rm \
                     -v $GITHUB_WORKSPACE:/workspace \
                     --workdir /workspace \
                     -v ~/.cache/emsdk:/emsdk/upstream/emscripten/cache/ \
                     emscripten/emsdk emmake make -j2 OPTIM=1 DEBUG=1

      - name: FrontPage 2000 debug
        run: |
          mkdir -p www
          cp bin/{gaem.data,gaem.wasm,gaem.js,index.html} www
          echo "https://albertvaka.github.io/nbgf/${{ env.GITHUB_REF_SLUG }}-debug" >> www/README.md

      - name: Deploy debug
        uses: JamesIves/github-pages-deploy-action@4.1.4
        with:
          repository-name: albertvaka/albertvaka.github.io
          ssh-key: ${{ secrets.DEPLOY_KEY }}
          branch: main
          folder: www
          target-folder: nbgf/${{ env.GITHUB_REF_SLUG }}-debug
